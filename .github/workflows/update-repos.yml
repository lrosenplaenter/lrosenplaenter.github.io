name: Update Repositories List

on:
  schedule:
    # Runs every day at midnight UTC
    - cron: '0 0 * * *'
  workflow_dispatch: # Allows manual trigger

jobs:
  update-repos:
    runs-on: ubuntu-latest
    env:
      BLACKLIST: "lrosenplaenter.github.io" # Space-separated list of repos to exclude

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Generate repositories list
        run: |
          BLACKLISTED_REPOS=($BLACKLIST)
          REPOS=$(curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" https://api.github.com/users/lrosenplaenter/repos)
          REPOS_JSON="[]"
          for repo in $(echo "${REPOS}" | jq -r '.[] | @base64'); do
            _jq() {
              echo ${repo} | base64 --decode | jq -r ${1}
            }
            REPO_NAME=$(_jq '.name')
            if [[ ! " ${BLACKLISTED_REPOS[@]} " =~ " ${REPO_NAME} " ]]; then
              TAGS_URL="https://api.github.com/repos/lrosenplaenter/${REPO_NAME}/tags"
              LATEST_TAG=$(curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" $TAGS_URL | jq -r '.[0].name // "No tags"')
              REPO_ENTRY=$(echo ${repo} | base64 --decode | jq --arg LATEST_TAG "$LATEST_TAG" --arg HOMEPAGE "https://lrosenplaenter.github.io/${REPO_NAME}" '. + {latest_tag: $LATEST_TAG, homepage: $HOMEPAGE}')
              REPOS_JSON=$(echo ${REPOS_JSON} | jq --argjson REPO_ENTRY "$REPO_ENTRY" '. += [$REPO_ENTRY]')
            fi
          done
          echo ${REPOS_JSON} | jq '.' > repos.json
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Check homepage availability
        run: |
          jq '.[] | .homepage' repos.json | while read url; do
            url=$(echo $url | tr -d '"') # Remove quotes around URL
            if [ "$url" != "null" ]; then
              STATUS_CODE=$(curl --write-out "%{http_code}\n" --silent --output /dev/null $url)
              if [ "$STATUS_CODE" == "404" ]; then
                # Set homepage to null for this URL
                jq --arg url "$url" '(.[] | select(.homepage==$url) | .homepage) |= null' repos.json > tmp.$$.json && mv tmp.$$.json repos.json
              fi
            fi
          done

      - name: Commit and push
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          
          # Determine if triggered by schedule or manual dispatch
          if [ "${{ github.event_name }}" = "schedule" ]; then
            COMMIT_MSG="Automated update of repository list: $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          else
            COMMIT_MSG="Manual update of repository list: $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          fi
          
          git add repos.json
          git commit -m "${COMMIT_MSG}"
          git push
